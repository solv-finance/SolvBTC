{
  "address": "0x48EbD3A257a35bf4200d1c6fAe4ab2FcF6f26B54",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "governor_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ImportBeacon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beaconProxy",
          "type": "address"
        }
      ],
      "name": "ImportBeaconProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewBeacon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beaconProxy",
          "type": "address"
        }
      ],
      "name": "NewBeaconProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "NewGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingGovernor",
          "type": "address"
        }
      ],
      "name": "NewPendingGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beaconProxy",
          "type": "address"
        }
      ],
      "name": "RemoveBeaconProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferBeaconOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "UpgradeBeacon",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenName_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol_",
          "type": "string"
        }
      ],
      "name": "deployProductProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        }
      ],
      "name": "getBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        }
      ],
      "name": "getImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        }
      ],
      "name": "getProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "beacon_",
          "type": "address"
        }
      ],
      "name": "importBeacon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "proxy_",
          "type": "address"
        }
      ],
      "name": "importProductProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "productTypes",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        }
      ],
      "name": "removeProductProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "beacon_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin_",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "transferBeaconOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingGovernor_",
          "type": "address"
        }
      ],
      "name": "transferGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96cb6939375700ef6370b1682999697dfdb4c364c0ac32ce68215c4f14254089",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x4b2e4cAc67786778c79beCcC8c800E325Ab3bDDa",
    "contractAddress": null,
    "transactionIndex": 6,
    "gasUsed": "1968249",
    "logsBloom": "0x
    "blockHash": "0x4515f723ca13f6f306fb09c3cb98584dcd046f67572b933b8260312794e7d343",
    "transactionHash": "0x96cb6939375700ef6370b1682999697dfdb4c364c0ac32ce68215c4f14254089",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 42674442,
        "transactionHash": "0x96cb6939375700ef6370b1682999697dfdb4c364c0ac32ce68215c4f14254089",
        "address": "0x48EbD3A257a35bf4200d1c6fAe4ab2FcF6f26B54",
        "topics": [
          "0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b2e4cac67786778c79beccc8c800e325ab3bdda",
        "logIndex": 24,
        "blockHash": "0x4515f723ca13f6f306fb09c3cb98584dcd046f67572b933b8260312794e7d343"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 42674442,
        "transactionHash": "0x96cb6939375700ef6370b1682999697dfdb4c364c0ac32ce68215c4f14254089",
        "address": "0x48EbD3A257a35bf4200d1c6fAe4ab2FcF6f26B54",
        "topics": [
          "0x1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b2e4cac67786778c79beccc8c800e325ab3bdda",
        "logIndex": 25,
        "blockHash": "0x4515f723ca13f6f306fb09c3cb98584dcd046f67572b933b8260312794e7d343"
      }
    ],
    "blockNumber": 42674442,
    "cumulativeGasUsed": "2903427",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4b2e4cAc67786778c79beCcC8c800E325Ab3bDDa",
    "0x4b2e4cAc67786778c79beCcC8c800E325Ab3bDDa"
  ],
  "numDeployments": 1,
  "solcInputHash": "fb7979997102803607ec72106037ad91",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ImportBeacon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beaconProxy\",\"type\":\"address\"}],\"name\":\"ImportBeaconProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewBeacon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beaconProxy\",\"type\":\"address\"}],\"name\":\"NewBeaconProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"NewGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingGovernor\",\"type\":\"address\"}],\"name\":\"NewPendingGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beaconProxy\",\"type\":\"address\"}],\"name\":\"RemoveBeaconProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferBeaconOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"UpgradeBeacon\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol_\",\"type\":\"string\"}],\"name\":\"deployProductProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"}],\"name\":\"getBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"}],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"}],\"name\":\"getProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"beacon_\",\"type\":\"address\"}],\"name\":\"importBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proxy_\",\"type\":\"address\"}],\"name\":\"importProductProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"productTypes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"}],\"name\":\"removeProductProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beacon_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin_\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferBeaconOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingGovernor_\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SolvBTCFactory.sol\":\"SolvBTCFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"../ERC1967/ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\\n *\\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\\n * the beacon to not upgrade the implementation maliciously.\\n *\\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\\n * an inconsistent state where the beacon storage slot does not match the beacon address.\\n */\\ncontract BeaconProxy is Proxy {\\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\\n    address private immutable _beacon;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\\n        _beacon = beacon;\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the beacon.\\n     */\\n    function _getBeacon() internal view virtual returns (address) {\\n        return _beacon;\\n    }\\n}\\n\",\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/UpgradeableBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Ownable} from \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract UpgradeableBeacon is IBeacon, Ownable {\\n    address private _implementation;\\n\\n    /**\\n     * @dev The `implementation` of the beacon is invalid.\\n     */\\n    error BeaconInvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev Emitted when the implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\\n     */\\n    constructor(address implementation_, address initialOwner) Ownable(initialOwner) {\\n        _setImplementation(implementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function implementation() public view virtual returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newImplementation` must be a contract.\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\\n        _setImplementation(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newImplementation` must be a contract.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert BeaconInvalidImplementation(newImplementation);\\n        }\\n        _implementation = newImplementation;\\n        emit Upgraded(newImplementation);\\n    }\\n}\\n\",\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/SolvBTCFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport \\\"./access/AdminControl.sol\\\";\\nimport \\\"./access/GovernorControl.sol\\\";\\n\\ncontract SolvBTCFactory is AdminControl, GovernorControl {\\n\\n    event NewImplementation(string indexed productType, address indexed implementation);\\n    event NewBeacon(string indexed productType, address indexed beacon, address indexed implementation);\\n    event ImportBeacon(string indexed productType, address indexed beacon, address indexed implementation);\\n    event UpgradeBeacon(string indexed productType, address indexed beacon, address indexed implementation);\\n    event TransferBeaconOwnership(string indexed productType, address indexed beacon, address indexed newOwner);\\n    event NewBeaconProxy(string indexed productType, string indexed productName, address indexed beaconProxy);\\n    event ImportBeaconProxy(string indexed productType, string indexed productName, address indexed beaconProxy);\\n    event RemoveBeaconProxy(string indexed productType, string indexed productName, address indexed beaconProxy);\\n    \\n    struct ProductType {\\n        address implementation;\\n        address beacon;\\n        mapping(string => address) proxies;\\n    }\\n\\n    mapping(string => ProductType) public productTypes;\\n\\n    constructor(address admin_, address governor_) AdminControl(admin_) GovernorControl(governor_) {\\n        require(admin_ != address(0), \\\"SolvBTCFactory: invalid admin\\\");\\n        require(governor_ != address(0), \\\"SolvBTCFactory: invalid governor\\\");\\n    }\\n\\n    function setImplementation(string memory productType_, address implementation_) \\n        external virtual onlyAdmin returns (address beacon_) \\n    {\\n        require(implementation_ != address(0), \\\"SolvBTCFactory: invalid implementation\\\");\\n        require(implementation_ != productTypes[productType_].implementation, \\\"SolvBTCFactory: same implementation\\\");\\n\\n        productTypes[productType_].implementation = implementation_;\\n        emit NewImplementation(productType_, implementation_);\\n\\n        beacon_ = productTypes[productType_].beacon;\\n        if (beacon_ == address(0)) {\\n            beacon_ = address(new UpgradeableBeacon(implementation_, address(this)));\\n            productTypes[productType_].beacon = beacon_;\\n            emit NewBeacon(productType_, beacon_, implementation_);\\n        } else {\\n            UpgradeableBeacon(beacon_).upgradeTo(implementation_);\\n            emit UpgradeBeacon(productType_, beacon_, implementation_);\\n        }\\n    }\\n\\n    function transferBeaconOwnership(string memory productType_, address newOwner_) external virtual onlyAdmin {\\n        address beacon = productTypes[productType_].beacon;\\n        UpgradeableBeacon(beacon).transferOwnership(newOwner_);\\n        emit TransferBeaconOwnership(productType_, beacon, newOwner_);\\n    }\\n\\n    function importBeacon(string memory productType_, address beacon_) external virtual onlyAdmin {\\n        require(beacon_ != address(0), \\\"SolvBTCFactory: invalid beacon address\\\");\\n        productTypes[productType_].beacon = beacon_;\\n        emit ImportBeacon(productType_, beacon_, UpgradeableBeacon(beacon_).implementation());\\n    }\\n\\n    function deployProductProxy(\\n        string memory productType_, string memory productName_,\\n        string memory tokenName_, string memory tokenSymbol_\\n    ) \\n        external virtual onlyGovernor returns (address proxy_) \\n    {\\n        ProductType storage productType = productTypes[productType_];\\n        require(productType.proxies[productName_] == address(0), \\\"SolvBTCFactory: product already deployed\\\");\\n        require(productType.beacon != address(0), \\\"SolvBTCFactory: beacon not deployed\\\");\\n\\n        bytes32 salt = keccak256(abi.encodePacked(productType_, productName_));\\n        proxy_ = address(new BeaconProxy{salt: salt}(productType.beacon, new bytes(0)));\\n\\n        bytes memory initData = abi.encodeWithSignature(\\\"initialize(string,string)\\\", tokenName_, tokenSymbol_);\\n        (bool success, ) = proxy_.call(initData);\\n        require(success, \\\"SolvBTCFactory: proxy initialization failed\\\");\\n\\n        productType.proxies[productName_] = proxy_;\\n        emit NewBeaconProxy(productType_, productName_, proxy_);\\n    }\\n\\n    function importProductProxy(string memory productType_, string memory productName_, address proxy_) external onlyGovernor {\\n        require(productTypes[productType_].beacon != address(0), \\\"SolvBTCFactory: beacon not deployed\\\");\\n        productTypes[productType_].proxies[productName_] = proxy_;\\n        emit ImportBeaconProxy(productType_, productName_, proxy_);\\n    }\\n\\n    function removeProductProxy(string memory productType_, string memory productName_) external onlyGovernor {\\n        address proxy = productTypes[productType_].proxies[productName_];\\n        require(proxy != address(0), \\\"SolvBTCFactory: proxy not deployed\\\");\\n        delete productTypes[productType_].proxies[productName_];\\n        emit RemoveBeaconProxy(productType_, productName_, proxy);\\n    }\\n\\n    function getImplementation(string memory productType_) external view virtual returns (address) {\\n        return productTypes[productType_].implementation;\\n    }\\n\\n    function getBeacon(string memory productType_) external view virtual returns (address) {\\n        return productTypes[productType_].beacon;\\n    }\\n\\n    function getProxy(string memory productType_, string memory productName_) public view returns (address) {\\n        return productTypes[productType_].proxies[productName_];\\n    }\\n\\n}\\n\",\"keccak256\":\"0xd42514fb421edb9184666b61540ef64837585595f5c28df728ca297100361956\",\"license\":\"MIT\"},\"contracts/access/AdminControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nabstract contract AdminControl {\\n\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    address public admin;\\n    address public pendingAdmin;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"only admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyPendingAdmin() {\\n        require(msg.sender == pendingAdmin, \\\"only pending admin\\\");\\n        _;\\n    }\\n\\n    constructor(address admin_) {\\n        admin = admin_;\\n        emit NewAdmin(address(0), admin_);\\n    }\\n\\n    function transferAdmin(address newPendingAdmin_) external virtual onlyAdmin {\\n        emit NewPendingAdmin(pendingAdmin, newPendingAdmin_);\\n        pendingAdmin = newPendingAdmin_;        \\n    }\\n\\n    function acceptAdmin() external virtual onlyPendingAdmin {\\n        emit NewAdmin(admin, pendingAdmin);\\n        admin = pendingAdmin;\\n        delete pendingAdmin;\\n    }\\n}\\n\",\"keccak256\":\"0xf1f81923342923ae02ac26cc26e5d3cc4ee5b749055e89266b64b8f647baa018\",\"license\":\"MIT\"},\"contracts/access/GovernorControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nabstract contract GovernorControl {\\n\\n\\tevent NewGovernor(address oldGovernor, address newGovernor);\\n\\tevent NewPendingGovernor(address oldPendingGovernor, address newPendingGovernor);\\n\\n\\taddress public governor;\\n\\taddress public pendingGovernor;\\n\\n\\tmodifier onlyGovernor() {\\n\\t\\trequire(governor == msg.sender, \\\"only governor\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlyPendingGovernor() {\\n\\t\\trequire(pendingGovernor == msg.sender, \\\"only governor\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address governor_) {\\n\\t\\tgovernor = governor_;\\n        emit NewGovernor(address(0), governor_);\\n\\t}\\n\\n\\tfunction transferGovernance(address newPendingGovernor_) external virtual onlyGovernor {\\n\\t\\temit NewPendingGovernor(pendingGovernor, newPendingGovernor_);\\n\\t\\tpendingGovernor = newPendingGovernor_;\\n\\t}\\n\\n\\tfunction acceptGovernance() external virtual onlyPendingGovernor {\\n\\t\\temit NewGovernor(governor, pendingGovernor);\\n\\t\\tgovernor = pendingGovernor;\\n\\t\\tdelete pendingGovernor;\\n\\t}\\n}\\n\",\"keccak256\":\"0x3a6b5959055dc2700d6368c2de16d7143c87e146d4ddd6eb55adc528f82d60a3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620023bf380380620023bf8339810160408190526200003491620001c0565b600080546001600160a01b0319166001600160a01b038416178155604051829184917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc9162000085918490620001f8565b60405180910390a150600280546001600160a01b0319166001600160a01b0383161790556040517f1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a90620000de906000908490620001f8565b60405180910390a1506001600160a01b038216620001435760405162461bcd60e51b815260206004820152601d60248201527f536f6c76425443466163746f72793a20696e76616c69642061646d696e00000060448201526064015b60405180910390fd5b6001600160a01b0381166200019b5760405162461bcd60e51b815260206004820181905260248201527f536f6c76425443466163746f72793a20696e76616c696420676f7665726e6f7260448201526064016200013a565b505062000212565b80516001600160a01b0381168114620001bb57600080fd5b919050565b60008060408385031215620001d457600080fd5b620001df83620001a3565b9150620001ef60208401620001a3565b90509250929050565b6001600160a01b0392831681529116602082015260400190565b61219d80620002226000396000f3fe60806040523480156200001157600080fd5b5060043610620000fa5760003560e01c806302bc365c14620000ff57806303789a5b146200011857806306419fe5146200012f5780630c340a24146200015e5780630ddcef5314620001725780630e18b6811462000189578063238efcbc146200019357806326782247146200019d5780636b68389614620001b157806375829def14620001c8578063a00d9bb914620001df578063a04c507914620001f6578063a844babb146200020d578063bc47eb1d146200025f578063d38bfff41462000276578063e3056a34146200028d578063f5dccfa114620002a1578063f851a44014620002b8575b600080fd5b6200011662000110366004620012fd565b620002cc565b005b620001166200012936600462001380565b62000461565b620001466200014036600462001380565b620005ec565b604051620001559190620013d7565b60405180910390f35b60025462000146906001600160a01b031681565b6200014662000183366004620013eb565b62000946565b620001166200097c565b6200011662000a41565b60015462000146906001600160a01b031681565b62000146620001c2366004620013eb565b62000ae2565b62000116620001d93660046200142b565b62000b15565b62000146620001f036600462001452565b62000bad565b620001166200020736600462001380565b62000ef8565b6200024f6200021e366004620013eb565b8051602081830181018051600482529282019190930120915280546001909101546001600160a01b03918216911682565b604051620001559291906200150b565b6200014662000270366004620012fd565b62001006565b62000116620002873660046200142b565b6200105c565b60035462000146906001600160a01b031681565b62000116620002b236600462001525565b620010f4565b60005462000146906001600160a01b031681565b6002546001600160a01b03163314620003025760405162461bcd60e51b8152600401620002f990620015a5565b60405180910390fd5b6000600483604051620003169190620015f2565b908152602001604051809103902060020182604051620003379190620015f2565b908152604051908190036020019020546001600160a01b0316905080620003ac5760405162461bcd60e51b815260206004820152602260248201527f536f6c76425443466163746f72793a2070726f7879206e6f74206465706c6f79604482015261195960f21b6064820152608401620002f9565b600483604051620003be9190620015f2565b908152602001604051809103902060020182604051620003df9190620015f2565b90815260405190819003602001812080546001600160a01b03191690556001600160a01b0382169062000414908490620015f2565b6040518091039020846040516200042c9190620015f2565b604051908190038120907f72871655cb8e08a51370cd107b066dc7fa642b39f87eba10447580209c3207cc90600090a4505050565b6000546001600160a01b031633146200048e5760405162461bcd60e51b8152600401620002f99062001610565b6001600160a01b038116620004f55760405162461bcd60e51b815260206004820152602660248201527f536f6c76425443466163746f72793a20696e76616c696420626561636f6e206160448201526564647265737360d01b6064820152608401620002f9565b80600483604051620005089190620015f2565b908152604080516020928190038301812060010180546001600160a01b0319166001600160a01b03958616179055635c60da1b60e01b8152905192841692635c60da1b926004808401939192918290030181865afa1580156200056f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000595919062001634565b6001600160a01b0316816001600160a01b031683604051620005b89190620015f2565b604051908190038120907fd4be5182216f129f579eb83fde3f2711012ecb2a370c95ebed03cd2d2c66f8e290600090a45050565b600080546001600160a01b031633146200061a5760405162461bcd60e51b8152600401620002f99062001610565b6001600160a01b038216620006815760405162461bcd60e51b815260206004820152602660248201527f536f6c76425443466163746f72793a20696e76616c696420696d706c656d656e6044820152653a30ba34b7b760d11b6064820152608401620002f9565b600483604051620006939190620015f2565b908152604051908190036020019020546001600160a01b03908116908316036200070c5760405162461bcd60e51b815260206004820152602360248201527f536f6c76425443466163746f72793a2073616d6520696d706c656d656e74617460448201526234b7b760e91b6064820152608401620002f9565b816004846040516200071f9190620015f2565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908316906200075b908590620015f2565b604051908190038120907f70cc12b129d10f00c73743b4313ad6997088babca4be2b6732a960391203c31f90600090a36004836040516200079d9190620015f2565b908152604051908190036020019020600101546001600160a01b031690508062000889578130604051620007d19062001237565b620007de9291906200150b565b604051809103906000f080158015620007fb573d6000803e3d6000fd5b50905080600484604051620008119190620015f2565b90815260405190819003602001812060010180546001600160a01b039384166001600160a01b03199091161790558382169183169062000853908690620015f2565b604051908190038120907fcd7ef590b717071b3f540fe9b93410b1e56b126b254fe215336ea709fba59b2190600090a462000940565b604051631b2ce7f360e11b81526001600160a01b03821690633659cfe690620008b7908590600401620013d7565b600060405180830381600087803b158015620008d257600080fd5b505af1158015620008e7573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b0316846040516200090f9190620015f2565b604051908190038120907fc73db28a0b1cf26933458afb626169fba2899e9fb8b2dd91ceac16f1f815d85290600090a45b92915050565b60006004826040516200095a9190620015f2565b908152604051908190036020019020600101546001600160a01b031692915050565b6001546001600160a01b03163314620009cd5760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b6044820152606401620002f9565b6000546001546040517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc9262000a12926001600160a01b03918216929116906200150b565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b0316331462000a6e5760405162461bcd60e51b8152600401620002f990620015a5565b6002546003546040517f1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a9262000ab3926001600160a01b03918216929116906200150b565b60405180910390a160038054600280546001600160a01b03199081166001600160a01b03841617909155169055565b600060048260405162000af69190620015f2565b908152604051908190036020019020546001600160a01b031692915050565b6000546001600160a01b0316331462000b425760405162461bcd60e51b8152600401620002f99062001610565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99162000b83916001600160a01b039091169084906200150b565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546000906001600160a01b0316331462000bdd5760405162461bcd60e51b8152600401620002f990620015a5565b600060048660405162000bf19190620015f2565b9081526040519081900360200181209150600090600283019062000c17908890620015f2565b908152604051908190036020019020546001600160a01b03161462000c905760405162461bcd60e51b815260206004820152602860248201527f536f6c76425443466163746f72793a2070726f6475637420616c72656164792060448201526719195c1b1bde595960c21b6064820152608401620002f9565b60018101546001600160a01b031662000cbd5760405162461bcd60e51b8152600401620002f99062001654565b6000868660405160200162000cd492919062001697565b60408051601f19818403018152828252805160209182012060018601546000855291840192839052935083926001600160a01b039091169162000d179062001245565b62000d24929190620016f8565b8190604051809103906000f590508015801562000d45573d6000803e3d6000fd5b5092506000858560405160240162000d5f9291906200171e565b60408051601f198184030181529181526020820180516001600160e01b031663266c45bb60e11b179052519091506000906001600160a01b0386169062000da8908490620015f2565b6000604051808303816000865af19150503d806000811462000de7576040519150601f19603f3d011682016040523d82523d6000602084013e62000dec565b606091505b505090508062000e535760405162461bcd60e51b815260206004820152602b60248201527f536f6c76425443466163746f72793a2070726f787920696e697469616c697a6160448201526a1d1a5bdb8819985a5b195960aa1b6064820152608401620002f9565b84846002018960405162000e689190620015f2565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559086169062000ea4908a90620015f2565b60405180910390208a60405162000ebc9190620015f2565b604051908190038120907fc30ce88f5e35e9e52ef522887407c7e48fc30575f887289cd41d63bbc665e7ec90600090a450505050949350505050565b6000546001600160a01b0316331462000f255760405162461bcd60e51b8152600401620002f99062001610565b600060048360405162000f399190620015f2565b9081526040519081900360200181206001015463f2fde38b60e01b82526001600160a01b03169150819063f2fde38b9062000f79908590600401620013d7565b600060405180830381600087803b15801562000f9457600080fd5b505af115801562000fa9573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b03168460405162000fd19190620015f2565b604051908190038120907fc69903c0cec4f4503aa4496d78dcbf9f6e045679a04c0e921b7bad8e72b209d090600090a4505050565b60006004836040516200101a9190620015f2565b9081526020016040518091039020600201826040516200103b9190620015f2565b908152604051908190036020019020546001600160a01b0316905092915050565b6002546001600160a01b03163314620010895760405162461bcd60e51b8152600401620002f990620015a5565b6003546040517f7d767be5a57784412a13945bd5114db84487d2b007bfcdb2f449fc9ea35437f791620010ca916001600160a01b039091169084906200150b565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314620011215760405162461bcd60e51b8152600401620002f990620015a5565b60006001600160a01b03166004846040516200113e9190620015f2565b908152604051908190036020019020600101546001600160a01b0316036200117a5760405162461bcd60e51b8152600401620002f99062001654565b806004846040516200118d9190620015f2565b908152602001604051809103902060020183604051620011ae9190620015f2565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905590821690620011ea908490620015f2565b604051809103902084604051620012029190620015f2565b604051908190038120907f0ef163d0880f2992313f190506962752ba93927541e4f93693e30c8109da774590600090a4505050565b61045b806200175183390190565b6105bc8062001bac83390190565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200127b57600080fd5b81356001600160401b038082111562001298576200129862001253565b604051601f8301601f19908116603f01168101908282118183101715620012c357620012c362001253565b81604052838152866020858801011115620012dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156200131157600080fd5b82356001600160401b03808211156200132957600080fd5b620013378683870162001269565b935060208501359150808211156200134e57600080fd5b506200135d8582860162001269565b9150509250929050565b6001600160a01b03811681146200137d57600080fd5b50565b600080604083850312156200139457600080fd5b82356001600160401b03811115620013ab57600080fd5b620013b98582860162001269565b9250506020830135620013cc8162001367565b809150509250929050565b6001600160a01b0391909116815260200190565b600060208284031215620013fe57600080fd5b81356001600160401b038111156200141557600080fd5b620014238482850162001269565b949350505050565b6000602082840312156200143e57600080fd5b81356200144b8162001367565b9392505050565b600080600080608085870312156200146957600080fd5b84356001600160401b03808211156200148157600080fd5b6200148f8883890162001269565b95506020870135915080821115620014a657600080fd5b620014b48883890162001269565b94506040870135915080821115620014cb57600080fd5b620014d98883890162001269565b93506060870135915080821115620014f057600080fd5b50620014ff8782880162001269565b91505092959194509250565b6001600160a01b0392831681529116602082015260400190565b6000806000606084860312156200153b57600080fd5b83356001600160401b03808211156200155357600080fd5b620015618783880162001269565b945060208601359150808211156200157857600080fd5b50620015878682870162001269565b92505060408401356200159a8162001367565b809150509250925092565b6020808252600d908201526c37b7363c9033b7bb32b93737b960991b604082015260600190565b60005b83811015620015e9578181015183820152602001620015cf565b50506000910152565b6000825162001606818460208701620015cc565b9190910192915050565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b6000602082840312156200164757600080fd5b81516200144b8162001367565b60208082526023908201527f536f6c76425443466163746f72793a20626561636f6e206e6f74206465706c6f6040820152621e595960ea1b606082015260800190565b60008351620016ab818460208801620015cc565b835190830190620016c1818360208801620015cc565b01949350505050565b60008151808452620016e4816020860160208601620015cc565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200142390830184620016ca565b604081526000620017336040830185620016ca565b8281036020840152620017478185620016ca565b9594505050505056fe608060405234801561001057600080fd5b5060405161045b38038061045b83398101604081905261002f91610160565b806001600160a01b038116610063576000604051631e4fbdf760e01b815260040161005a9190610193565b60405180910390fd5b61006c8161007d565b50610076826100cd565b50506101a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036100fa578060405163211eb15960e21b815260040161005a9190610193565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461015b57600080fd5b919050565b6000806040838503121561017357600080fd5b61017c83610144565b915061018a60208401610144565b90509250929050565b6001600160a01b0391909116815260200190565b6102a5806101b66000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a6146100945780638da5cb5b1461009c578063f2fde38b146100a4575b600080fd5b61006f61006a36600461022b565b6100b7565b005b6001546001600160a01b03165b60405161008b919061025b565b60405180910390f35b61006f6100cb565b61007e6100df565b61006f6100b236600461022b565b6100ee565b6100bf610132565b6100c881610164565b50565b6100d3610132565b6100dd60006101db565b565b6000546001600160a01b031690565b6100f6610132565b6001600160a01b038116610129576000604051631e4fbdf760e01b8152600401610120919061025b565b60405180910390fd5b6100c8816101db565b3361013b6100df565b6001600160a01b0316146100dd573360405163118cdaa760e01b8152600401610120919061025b565b806001600160a01b03163b600003610191578060405163211eb15960e21b8152600401610120919061025b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023d57600080fd5b81356001600160a01b038116811461025457600080fd5b9392505050565b6001600160a01b039190911681526020019056fea26469706673582212202ee2b89d96094391782842b0cdf3533e06f0dc733bd57d969ac3d7009da714d864736f6c6343000814003360a06040526040516105bc3803806105bc83398101604081905261002291610370565b61002c828261003e565b506001600160a01b031660805261047b565b610047826100fe565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156100f2576100ed826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e79190610430565b82610203565b505050565b6100fa61027a565b5050565b806001600160a01b03163b6000036101345780604051631933b43b60e21b815260040161012b919061044b565b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190610430565b9050806001600160a01b03163b6000036100fa5780604051634c9c8ce360e01b815260040161012b919061044b565b6060600080846001600160a01b031684604051610220919061045f565b600060405180830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b50909250905061027185838361029b565b95945050505050565b34156102995760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b0576102ab826102f1565b6102ea565b81511580156102c757506001600160a01b0384163b155b156102e75783604051639996b31560e01b815260040161012b919061044b565b50805b9392505050565b8051156103015780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461033157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561036757818101518382015260200161034f565b50506000910152565b6000806040838503121561038357600080fd5b61038c8361031a565b60208401519092506001600160401b03808211156103a957600080fd5b818501915085601f8301126103bd57600080fd5b8151818111156103cf576103cf610336565b604051601f8201601f19908116603f011681019083821181831017156103f7576103f7610336565b8160405282815288602084870101111561041057600080fd5b61042183602083016020880161034c565b80955050505050509250929050565b60006020828403121561044257600080fd5b6102ea8261031a565b6001600160a01b0391909116815260200190565b6000825161047181846020870161034c565b9190910192915050565b6080516101276104956000396000601e01526101276000f3fe6080604052600a600c565b005b60186014601a565b60a0565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156079573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190609b919060c3565b905090565b3660008037600080366000845af43d6000803e80801560be573d6000f35b3d6000fd5b60006020828403121560d457600080fd5b81516001600160a01b038116811460ea57600080fd5b939250505056fea2646970667358221220986f251d4075ce92271f1941774010b4b15f973ef37f152c539f8e838fd19ce464736f6c63430008140033a2646970667358221220dedf62f16b9b3ee69ab6dbfc86040b1cd96815cc9b9bb6989c37ae6292f96d4f64736f6c63430008140033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000fa5760003560e01c806302bc365c14620000ff57806303789a5b146200011857806306419fe5146200012f5780630c340a24146200015e5780630ddcef5314620001725780630e18b6811462000189578063238efcbc146200019357806326782247146200019d5780636b68389614620001b157806375829def14620001c8578063a00d9bb914620001df578063a04c507914620001f6578063a844babb146200020d578063bc47eb1d146200025f578063d38bfff41462000276578063e3056a34146200028d578063f5dccfa114620002a1578063f851a44014620002b8575b600080fd5b6200011662000110366004620012fd565b620002cc565b005b620001166200012936600462001380565b62000461565b620001466200014036600462001380565b620005ec565b604051620001559190620013d7565b60405180910390f35b60025462000146906001600160a01b031681565b6200014662000183366004620013eb565b62000946565b620001166200097c565b6200011662000a41565b60015462000146906001600160a01b031681565b62000146620001c2366004620013eb565b62000ae2565b62000116620001d93660046200142b565b62000b15565b62000146620001f036600462001452565b62000bad565b620001166200020736600462001380565b62000ef8565b6200024f6200021e366004620013eb565b8051602081830181018051600482529282019190930120915280546001909101546001600160a01b03918216911682565b604051620001559291906200150b565b6200014662000270366004620012fd565b62001006565b62000116620002873660046200142b565b6200105c565b60035462000146906001600160a01b031681565b62000116620002b236600462001525565b620010f4565b60005462000146906001600160a01b031681565b6002546001600160a01b03163314620003025760405162461bcd60e51b8152600401620002f990620015a5565b60405180910390fd5b6000600483604051620003169190620015f2565b908152602001604051809103902060020182604051620003379190620015f2565b908152604051908190036020019020546001600160a01b0316905080620003ac5760405162461bcd60e51b815260206004820152602260248201527f536f6c76425443466163746f72793a2070726f7879206e6f74206465706c6f79604482015261195960f21b6064820152608401620002f9565b600483604051620003be9190620015f2565b908152602001604051809103902060020182604051620003df9190620015f2565b90815260405190819003602001812080546001600160a01b03191690556001600160a01b0382169062000414908490620015f2565b6040518091039020846040516200042c9190620015f2565b604051908190038120907f72871655cb8e08a51370cd107b066dc7fa642b39f87eba10447580209c3207cc90600090a4505050565b6000546001600160a01b031633146200048e5760405162461bcd60e51b8152600401620002f99062001610565b6001600160a01b038116620004f55760405162461bcd60e51b815260206004820152602660248201527f536f6c76425443466163746f72793a20696e76616c696420626561636f6e206160448201526564647265737360d01b6064820152608401620002f9565b80600483604051620005089190620015f2565b908152604080516020928190038301812060010180546001600160a01b0319166001600160a01b03958616179055635c60da1b60e01b8152905192841692635c60da1b926004808401939192918290030181865afa1580156200056f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000595919062001634565b6001600160a01b0316816001600160a01b031683604051620005b89190620015f2565b604051908190038120907fd4be5182216f129f579eb83fde3f2711012ecb2a370c95ebed03cd2d2c66f8e290600090a45050565b600080546001600160a01b031633146200061a5760405162461bcd60e51b8152600401620002f99062001610565b6001600160a01b038216620006815760405162461bcd60e51b815260206004820152602660248201527f536f6c76425443466163746f72793a20696e76616c696420696d706c656d656e6044820152653a30ba34b7b760d11b6064820152608401620002f9565b600483604051620006939190620015f2565b908152604051908190036020019020546001600160a01b03908116908316036200070c5760405162461bcd60e51b815260206004820152602360248201527f536f6c76425443466163746f72793a2073616d6520696d706c656d656e74617460448201526234b7b760e91b6064820152608401620002f9565b816004846040516200071f9190620015f2565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908316906200075b908590620015f2565b604051908190038120907f70cc12b129d10f00c73743b4313ad6997088babca4be2b6732a960391203c31f90600090a36004836040516200079d9190620015f2565b908152604051908190036020019020600101546001600160a01b031690508062000889578130604051620007d19062001237565b620007de9291906200150b565b604051809103906000f080158015620007fb573d6000803e3d6000fd5b50905080600484604051620008119190620015f2565b90815260405190819003602001812060010180546001600160a01b039384166001600160a01b03199091161790558382169183169062000853908690620015f2565b604051908190038120907fcd7ef590b717071b3f540fe9b93410b1e56b126b254fe215336ea709fba59b2190600090a462000940565b604051631b2ce7f360e11b81526001600160a01b03821690633659cfe690620008b7908590600401620013d7565b600060405180830381600087803b158015620008d257600080fd5b505af1158015620008e7573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b0316846040516200090f9190620015f2565b604051908190038120907fc73db28a0b1cf26933458afb626169fba2899e9fb8b2dd91ceac16f1f815d85290600090a45b92915050565b60006004826040516200095a9190620015f2565b908152604051908190036020019020600101546001600160a01b031692915050565b6001546001600160a01b03163314620009cd5760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b6044820152606401620002f9565b6000546001546040517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc9262000a12926001600160a01b03918216929116906200150b565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b0316331462000a6e5760405162461bcd60e51b8152600401620002f990620015a5565b6002546003546040517f1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a9262000ab3926001600160a01b03918216929116906200150b565b60405180910390a160038054600280546001600160a01b03199081166001600160a01b03841617909155169055565b600060048260405162000af69190620015f2565b908152604051908190036020019020546001600160a01b031692915050565b6000546001600160a01b0316331462000b425760405162461bcd60e51b8152600401620002f99062001610565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99162000b83916001600160a01b039091169084906200150b565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002546000906001600160a01b0316331462000bdd5760405162461bcd60e51b8152600401620002f990620015a5565b600060048660405162000bf19190620015f2565b9081526040519081900360200181209150600090600283019062000c17908890620015f2565b908152604051908190036020019020546001600160a01b03161462000c905760405162461bcd60e51b815260206004820152602860248201527f536f6c76425443466163746f72793a2070726f6475637420616c72656164792060448201526719195c1b1bde595960c21b6064820152608401620002f9565b60018101546001600160a01b031662000cbd5760405162461bcd60e51b8152600401620002f99062001654565b6000868660405160200162000cd492919062001697565b60408051601f19818403018152828252805160209182012060018601546000855291840192839052935083926001600160a01b039091169162000d179062001245565b62000d24929190620016f8565b8190604051809103906000f590508015801562000d45573d6000803e3d6000fd5b5092506000858560405160240162000d5f9291906200171e565b60408051601f198184030181529181526020820180516001600160e01b031663266c45bb60e11b179052519091506000906001600160a01b0386169062000da8908490620015f2565b6000604051808303816000865af19150503d806000811462000de7576040519150601f19603f3d011682016040523d82523d6000602084013e62000dec565b606091505b505090508062000e535760405162461bcd60e51b815260206004820152602b60248201527f536f6c76425443466163746f72793a2070726f787920696e697469616c697a6160448201526a1d1a5bdb8819985a5b195960aa1b6064820152608401620002f9565b84846002018960405162000e689190620015f2565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559086169062000ea4908a90620015f2565b60405180910390208a60405162000ebc9190620015f2565b604051908190038120907fc30ce88f5e35e9e52ef522887407c7e48fc30575f887289cd41d63bbc665e7ec90600090a450505050949350505050565b6000546001600160a01b0316331462000f255760405162461bcd60e51b8152600401620002f99062001610565b600060048360405162000f399190620015f2565b9081526040519081900360200181206001015463f2fde38b60e01b82526001600160a01b03169150819063f2fde38b9062000f79908590600401620013d7565b600060405180830381600087803b15801562000f9457600080fd5b505af115801562000fa9573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b03168460405162000fd19190620015f2565b604051908190038120907fc69903c0cec4f4503aa4496d78dcbf9f6e045679a04c0e921b7bad8e72b209d090600090a4505050565b60006004836040516200101a9190620015f2565b9081526020016040518091039020600201826040516200103b9190620015f2565b908152604051908190036020019020546001600160a01b0316905092915050565b6002546001600160a01b03163314620010895760405162461bcd60e51b8152600401620002f990620015a5565b6003546040517f7d767be5a57784412a13945bd5114db84487d2b007bfcdb2f449fc9ea35437f791620010ca916001600160a01b039091169084906200150b565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314620011215760405162461bcd60e51b8152600401620002f990620015a5565b60006001600160a01b03166004846040516200113e9190620015f2565b908152604051908190036020019020600101546001600160a01b0316036200117a5760405162461bcd60e51b8152600401620002f99062001654565b806004846040516200118d9190620015f2565b908152602001604051809103902060020183604051620011ae9190620015f2565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905590821690620011ea908490620015f2565b604051809103902084604051620012029190620015f2565b604051908190038120907f0ef163d0880f2992313f190506962752ba93927541e4f93693e30c8109da774590600090a4505050565b61045b806200175183390190565b6105bc8062001bac83390190565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200127b57600080fd5b81356001600160401b038082111562001298576200129862001253565b604051601f8301601f19908116603f01168101908282118183101715620012c357620012c362001253565b81604052838152866020858801011115620012dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156200131157600080fd5b82356001600160401b03808211156200132957600080fd5b620013378683870162001269565b935060208501359150808211156200134e57600080fd5b506200135d8582860162001269565b9150509250929050565b6001600160a01b03811681146200137d57600080fd5b50565b600080604083850312156200139457600080fd5b82356001600160401b03811115620013ab57600080fd5b620013b98582860162001269565b9250506020830135620013cc8162001367565b809150509250929050565b6001600160a01b0391909116815260200190565b600060208284031215620013fe57600080fd5b81356001600160401b038111156200141557600080fd5b620014238482850162001269565b949350505050565b6000602082840312156200143e57600080fd5b81356200144b8162001367565b9392505050565b600080600080608085870312156200146957600080fd5b84356001600160401b03808211156200148157600080fd5b6200148f8883890162001269565b95506020870135915080821115620014a657600080fd5b620014b48883890162001269565b94506040870135915080821115620014cb57600080fd5b620014d98883890162001269565b93506060870135915080821115620014f057600080fd5b50620014ff8782880162001269565b91505092959194509250565b6001600160a01b0392831681529116602082015260400190565b6000806000606084860312156200153b57600080fd5b83356001600160401b03808211156200155357600080fd5b620015618783880162001269565b945060208601359150808211156200157857600080fd5b50620015878682870162001269565b92505060408401356200159a8162001367565b809150509250925092565b6020808252600d908201526c37b7363c9033b7bb32b93737b960991b604082015260600190565b60005b83811015620015e9578181015183820152602001620015cf565b50506000910152565b6000825162001606818460208701620015cc565b9190910192915050565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b6000602082840312156200164757600080fd5b81516200144b8162001367565b60208082526023908201527f536f6c76425443466163746f72793a20626561636f6e206e6f74206465706c6f6040820152621e595960ea1b606082015260800190565b60008351620016ab818460208801620015cc565b835190830190620016c1818360208801620015cc565b01949350505050565b60008151808452620016e4816020860160208601620015cc565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200142390830184620016ca565b604081526000620017336040830185620016ca565b8281036020840152620017478185620016ca565b9594505050505056fe608060405234801561001057600080fd5b5060405161045b38038061045b83398101604081905261002f91610160565b806001600160a01b038116610063576000604051631e4fbdf760e01b815260040161005a9190610193565b60405180910390fd5b61006c8161007d565b50610076826100cd565b50506101a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036100fa578060405163211eb15960e21b815260040161005a9190610193565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461015b57600080fd5b919050565b6000806040838503121561017357600080fd5b61017c83610144565b915061018a60208401610144565b90509250929050565b6001600160a01b0391909116815260200190565b6102a5806101b66000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a6146100945780638da5cb5b1461009c578063f2fde38b146100a4575b600080fd5b61006f61006a36600461022b565b6100b7565b005b6001546001600160a01b03165b60405161008b919061025b565b60405180910390f35b61006f6100cb565b61007e6100df565b61006f6100b236600461022b565b6100ee565b6100bf610132565b6100c881610164565b50565b6100d3610132565b6100dd60006101db565b565b6000546001600160a01b031690565b6100f6610132565b6001600160a01b038116610129576000604051631e4fbdf760e01b8152600401610120919061025b565b60405180910390fd5b6100c8816101db565b3361013b6100df565b6001600160a01b0316146100dd573360405163118cdaa760e01b8152600401610120919061025b565b806001600160a01b03163b600003610191578060405163211eb15960e21b8152600401610120919061025b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023d57600080fd5b81356001600160a01b038116811461025457600080fd5b9392505050565b6001600160a01b039190911681526020019056fea26469706673582212202ee2b89d96094391782842b0cdf3533e06f0dc733bd57d969ac3d7009da714d864736f6c6343000814003360a06040526040516105bc3803806105bc83398101604081905261002291610370565b61002c828261003e565b506001600160a01b031660805261047b565b610047826100fe565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156100f2576100ed826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e79190610430565b82610203565b505050565b6100fa61027a565b5050565b806001600160a01b03163b6000036101345780604051631933b43b60e21b815260040161012b919061044b565b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190610430565b9050806001600160a01b03163b6000036100fa5780604051634c9c8ce360e01b815260040161012b919061044b565b6060600080846001600160a01b031684604051610220919061045f565b600060405180830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b50909250905061027185838361029b565b95945050505050565b34156102995760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b0576102ab826102f1565b6102ea565b81511580156102c757506001600160a01b0384163b155b156102e75783604051639996b31560e01b815260040161012b919061044b565b50805b9392505050565b8051156103015780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461033157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561036757818101518382015260200161034f565b50506000910152565b6000806040838503121561038357600080fd5b61038c8361031a565b60208401519092506001600160401b03808211156103a957600080fd5b818501915085601f8301126103bd57600080fd5b8151818111156103cf576103cf610336565b604051601f8201601f19908116603f011681019083821181831017156103f7576103f7610336565b8160405282815288602084870101111561041057600080fd5b61042183602083016020880161034c565b80955050505050509250929050565b60006020828403121561044257600080fd5b6102ea8261031a565b6001600160a01b0391909116815260200190565b6000825161047181846020870161034c565b9190910192915050565b6080516101276104956000396000601e01526101276000f3fe6080604052600a600c565b005b60186014601a565b60a0565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156079573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190609b919060c3565b905090565b3660008037600080366000845af43d6000803e80801560be573d6000f35b3d6000fd5b60006020828403121560d457600080fd5b81516001600160a01b038116811460ea57600080fd5b939250505056fea2646970667358221220986f251d4075ce92271f1941774010b4b15f973ef37f152c539f8e838fd19ce464736f6c63430008140033a2646970667358221220dedf62f16b9b3ee69ab6dbfc86040b1cd96815cc9b9bb6989c37ae6292f96d4f64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1576,
        "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1578,
        "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1672,
        "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
        "label": "governor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1674,
        "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1121,
        "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
        "label": "productTypes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_struct(ProductType)1116_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_struct(ProductType)1116_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct SolvBTCFactory.ProductType)",
        "numberOfBytes": "32",
        "value": "t_struct(ProductType)1116_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ProductType)1116_storage": {
        "encoding": "inplace",
        "label": "struct SolvBTCFactory.ProductType",
        "members": [
          {
            "astId": 1109,
            "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
            "label": "implementation",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1111,
            "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
            "label": "beacon",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1115,
            "contract": "contracts/SolvBTCFactory.sol:SolvBTCFactory",
            "label": "proxies",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_address)"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}