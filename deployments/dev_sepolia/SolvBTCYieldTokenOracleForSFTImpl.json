{
  "address": "0x35f42537739E76F7fF5288e0b4094dD66cbA2546",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sftSlot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "SetSFTOracle",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        }
      ],
      "name": "getNav",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        }
      ],
      "name": "navDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sftSlot",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sftOracle",
          "type": "address"
        }
      ],
      "name": "setSFTOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sftOracles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sftSlot",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin_",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f61e741f30e0532372c09a6778ede005a069e2525da28bf5d0234cae4c62fa5",
  "receipt": {
    "to": null,
    "from": "0x4b2e4cAc67786778c79beCcC8c800E325Ab3bDDa",
    "contractAddress": "0x35f42537739E76F7fF5288e0b4094dD66cbA2546",
    "transactionIndex": 66,
    "gasUsed": "751961",
    "logsBloom": "0x
    "blockHash": "0x73cdc5cfe894c02d58a2506017f68d3858cd0d7fa7da57471021a8c735cf5159",
    "transactionHash": "0x9f61e741f30e0532372c09a6778ede005a069e2525da28bf5d0234cae4c62fa5",
    "logs": [],
    "blockNumber": 6421181,
    "cumulativeGasUsed": "16403052",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5ed0d029ae82ff2a50ee427c5e3bcb56",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sftSlot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"SetSFTOracle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"getNav\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"name\":\"navDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sftSlot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sftOracle\",\"type\":\"address\"}],\"name\":\"setSFTOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sftOracles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sftSlot\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin_\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol\":\"SolvBTCYieldTokenOracleForSFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"contracts/ISolvBTCYieldTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\ninterface ISolvBTCYieldTokenOracle {\\n    function getNav(address erc20) external view returns (uint256);\\n    function navDecimals(address erc20) external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xa439635d003b7fb2e0ea5c190e576b5687f0c8d01a206c5f7288dae5866b4a92\",\"license\":\"MIT\"},\"contracts/access/AdminControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nabstract contract AdminControlUpgradeable is Initializable {\\n\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    address public admin;\\n    address public pendingAdmin;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"only admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyPendingAdmin() {\\n        require(msg.sender == pendingAdmin, \\\"only pending admin\\\");\\n        _;\\n    }\\n\\n    function __AdminControl_init(address admin_) internal onlyInitializing {\\n        __AdminControl_init_unchained(admin_);\\n    }\\n\\n    function __AdminControl_init_unchained(address admin_) internal onlyInitializing {\\n        admin = admin_;\\n        emit NewAdmin(address(0), admin_);\\n    }\\n\\n    function transferAdmin(address newPendingAdmin_) external virtual onlyAdmin {\\n        emit NewPendingAdmin(pendingAdmin, newPendingAdmin_);\\n        pendingAdmin = newPendingAdmin_;        \\n    }\\n\\n    function acceptAdmin() external virtual onlyPendingAdmin {\\n        emit NewAdmin(admin, pendingAdmin);\\n        admin = pendingAdmin;\\n        delete pendingAdmin;\\n    }\\n\\n    uint256[48] private __gap;\\n}\\n\",\"keccak256\":\"0xf7bde55289afe561d40407007b005a6cdc97d7cc3ec98e58866faeb80f63f883\",\"license\":\"MIT\"},\"contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nimport \\\"../ISolvBTCYieldTokenOracle.sol\\\";\\nimport \\\"../access/AdminControlUpgradeable.sol\\\";\\n\\nstruct SlotBaseInfo {\\n    address issuer;\\n    address currency;\\n    uint64 valueDate;\\n    uint64 maturity;\\n    uint64 createTime;\\n    bool transferable;\\n    bool isValid;\\n}\\n\\ninterface IOpenFundSftDelegate {\\n    function concrete() external view returns (address);\\n}\\n\\ninterface IOpenFundSftConcrete {\\n    function slotBaseInfo(uint256 slot) external view returns (SlotBaseInfo memory);\\n}\\n\\ninterface ISFTNavOracle {\\n    function getSubscribeNav(bytes32 poolId, uint256 time) external view returns (uint256 nav, uint256 navTime);\\n}\\n\\ninterface IERC20 {\\n    function decimals() external view returns (uint8);\\n}\\n\\ncontract SolvBTCYieldTokenOracleForSFT is ISolvBTCYieldTokenOracle, AdminControlUpgradeable {\\n    struct SFTOracleConfig {\\n        bytes32 poolId;\\n        address sft;\\n        uint256 sftSlot;\\n        address oracle;\\n    }\\n\\n    event SetSFTOracle(address indexed erc20, bytes32 indexed poolId, address sft, uint256 sftSlot, address oracle);\\n\\n    //erc20 => sftoracle config\\n    mapping(address => SFTOracleConfig) public sftOracles;\\n\\n    function initialize() external initializer {\\n        __AdminControl_init(msg.sender);\\n    }\\n\\n    function getNav(address erc20) external view override returns (uint256) {\\n        SFTOracleConfig storage config = sftOracles[erc20];\\n        require(\\n            config.oracle != address(0) && config.poolId != 0x00,\\n            \\\"SolvBTCYieldTokenOracleForSFT: no oracle for erc20\\\"\\n        );\\n\\n        (uint256 latestNav,) = ISFTNavOracle(config.oracle).getSubscribeNav(config.poolId, block.timestamp);\\n        return latestNav;\\n    }\\n\\n    function navDecimals(address erc20) external view override returns (uint8) {\\n        SFTOracleConfig storage config = sftOracles[erc20];\\n        address sftConcreteAddress = IOpenFundSftDelegate(config.sft).concrete();\\n        SlotBaseInfo memory slotBaseInfo = IOpenFundSftConcrete(sftConcreteAddress).slotBaseInfo(config.sftSlot);\\n        return IERC20(slotBaseInfo.currency).decimals();\\n    }\\n\\n    function setSFTOracle(address erc20, address sft, uint256 sftSlot, bytes32 poolId, address sftOracle)\\n        external\\n        onlyAdmin\\n    {\\n        require(erc20 != address(0), \\\"SolvBTCYieldTokenOracleForSFT: invalid erc20 address\\\");\\n        require(sft != address(0), \\\"SolvBTCYieldTokenOracleForSFT: invalid sft address\\\");\\n        require(sftSlot != 0, \\\"SolvBTCYieldTokenOracleForSFT: invalid sft slot\\\");\\n        require(poolId != 0x00, \\\"SolvBTCYieldTokenOracleForSFT: invalid pool id\\\");\\n        require(sftOracle != address(0), \\\"SolvBTCYieldTokenOracleForSFT: invalid sft oracle address\\\");\\n        sftOracles[erc20] = SFTOracleConfig({poolId: poolId, sft: sft, sftSlot: sftSlot, oracle: sftOracle});\\n        emit SetSFTOracle(erc20, poolId, sft, sftSlot, sftOracle);\\n    }\\n}\\n\",\"keccak256\":\"0xf9c62d59f160ca5a9810f36caa39d1af345d4fe5d760690261d1b0af6b9e4e48\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ca2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c80630e18b6811461008857806326782247146100925780633ebbbe4e146100c257806344afbef71461012f57806375829def146101425780638129fc1c14610155578063f851a4401461015d578063fb59600814610170578063ff554afa14610191575b600080fd5b6100906101b6565b005b6001546100a5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101046100d0366004610a13565b603260205260009081526040902080546001820154600283015460039093015491926001600160a01b039182169290911684565b604080519485526001600160a01b0393841660208601528401919091521660608201526080016100b9565b61009061013d366004610a37565b61026a565b610090610150366004610a13565b610529565b6100906105bc565b6000546100a5906001600160a01b031681565b61018361017e366004610a13565b6106b4565b6040519081526020016100b9565b6101a461019f366004610a13565b6107cd565b60405160ff90911681526020016100b9565b6001546001600160a01b0316331461020a5760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b60448201526064015b60405180910390fd5b600054600154604051600080516020610c4d8339815191529261023b926001600160a01b0391821692911690610a96565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146102945760405162461bcd60e51b815260040161020190610ab0565b6001600160a01b0385166102f55760405162461bcd60e51b81526020600482015260346024820152600080516020610c2d8339815191526044820152736e76616c6964206572633230206164647265737360601b6064820152608401610201565b6001600160a01b0384166103545760405162461bcd60e51b81526020600482015260326024820152600080516020610c2d8339815191526044820152716e76616c696420736674206164647265737360701b6064820152608401610201565b826000036103aa5760405162461bcd60e51b815260206004820152602f6024820152600080516020610c2d83398151915260448201526e1b9d985b1a59081cd99d081cdb1bdd608a1b6064820152608401610201565b60008290036104005760405162461bcd60e51b815260206004820152602e6024820152600080516020610c2d83398151915260448201526d1b9d985b1a59081c1bdbdb081a5960921b6064820152608401610201565b6001600160a01b0381166104665760405162461bcd60e51b81526020600482015260396024820152600080516020610c2d8339815191526044820152786e76616c696420736674206f7261636c65206164647265737360381b6064820152608401610201565b604080516080810182528381526001600160a01b03868116602080840182815284860189815287851660608088018281528e88166000818152603288528b902099518a55945160018a018054918a166001600160a01b0319928316179055935160028a015551600390980180549890971697909216969096179094558551928352908201889052938101929092528492917fd0d7fbfc5efc2f7cc91fc8be99ab593c00a3176a968efad158354ca27574de7e910160405180910390a35050505050565b6000546001600160a01b031633146105535760405162461bcd60e51b815260040161020190610ab0565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a991610592916001600160a01b03909116908490610a96565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006105c6610939565b805490915060ff600160401b82041615906001600160401b03166000811580156105ed5750825b90506000826001600160401b031660011480156106095750303b155b905081158015610617575080155b156106355760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b0319166001178555831561065e57845460ff60401b1916600160401b1785555b6106673361095d565b83156106ad57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b6001600160a01b03808216600090815260326020526040812060038101549192909116158015906106e55750805415155b61074c5760405162461bcd60e51b815260206004820152603260248201527f536f6c764254435969656c64546f6b656e4f7261636c65466f725346543a206e60448201527106f206f7261636c6520666f722065726332360741b6064820152608401610201565b600381015481546040516395b4c46760e01b815260048101919091524260248201526000916001600160a01b0316906395b4c467906044016040805180830381865afa1580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190610ad4565b50949350505050565b6001600160a01b038082166000908152603260209081526040808320600181015482516308ba344760e41b815292519495919486949190921692638ba3447092600480830193928290030181865afa15801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190610b08565b90506000816001600160a01b03166394f7e23e84600201546040518263ffffffff1660e01b815260040161088791815260200190565b60e060405180830381865afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190610b4c565b905080602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190610c09565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b610965610971565b61096e81610998565b50565b6109796109e4565b61099657604051631afcd79f60e31b815260040160405180910390fd5b565b6109a0610971565b600080546001600160a01b0319166001600160a01b038316178155604051600080516020610c4d833981519152916109d9918490610a96565b60405180910390a150565b60006109ee610939565b54600160401b900460ff16919050565b6001600160a01b038116811461096e57600080fd5b600060208284031215610a2557600080fd5b8135610a30816109fe565b9392505050565b600080600080600060a08688031215610a4f57600080fd5b8535610a5a816109fe565b94506020860135610a6a816109fe565b935060408601359250606086013591506080860135610a88816109fe565b809150509295509295909350565b6001600160a01b0392831681529116602082015260400190565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b60008060408385031215610ae757600080fd5b505080516020909101519092909150565b8051610b03816109fe565b919050565b600060208284031215610b1a57600080fd5b8151610a30816109fe565b80516001600160401b0381168114610b0357600080fd5b80518015158114610b0357600080fd5b600060e08284031215610b5e57600080fd5b60405160e081016001600160401b0381118282101715610b8e57634e487b7160e01b600052604160045260246000fd5b604052610b9a83610af8565b8152610ba860208401610af8565b6020820152610bb960408401610b25565b6040820152610bca60608401610b25565b6060820152610bdb60808401610b25565b6080820152610bec60a08401610b3c565b60a0820152610bfd60c08401610b3c565b60c08201529392505050565b600060208284031215610c1b57600080fd5b815160ff81168114610a3057600080fdfe536f6c764254435969656c64546f6b656e4f7261636c65466f725346543a2069f9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dca26469706673582212204e4b34403fc3d5b879e2239917017397b262056ee04a8a9b06f5c9916f1f731064736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c80630e18b6811461008857806326782247146100925780633ebbbe4e146100c257806344afbef71461012f57806375829def146101425780638129fc1c14610155578063f851a4401461015d578063fb59600814610170578063ff554afa14610191575b600080fd5b6100906101b6565b005b6001546100a5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101046100d0366004610a13565b603260205260009081526040902080546001820154600283015460039093015491926001600160a01b039182169290911684565b604080519485526001600160a01b0393841660208601528401919091521660608201526080016100b9565b61009061013d366004610a37565b61026a565b610090610150366004610a13565b610529565b6100906105bc565b6000546100a5906001600160a01b031681565b61018361017e366004610a13565b6106b4565b6040519081526020016100b9565b6101a461019f366004610a13565b6107cd565b60405160ff90911681526020016100b9565b6001546001600160a01b0316331461020a5760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b60448201526064015b60405180910390fd5b600054600154604051600080516020610c4d8339815191529261023b926001600160a01b0391821692911690610a96565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146102945760405162461bcd60e51b815260040161020190610ab0565b6001600160a01b0385166102f55760405162461bcd60e51b81526020600482015260346024820152600080516020610c2d8339815191526044820152736e76616c6964206572633230206164647265737360601b6064820152608401610201565b6001600160a01b0384166103545760405162461bcd60e51b81526020600482015260326024820152600080516020610c2d8339815191526044820152716e76616c696420736674206164647265737360701b6064820152608401610201565b826000036103aa5760405162461bcd60e51b815260206004820152602f6024820152600080516020610c2d83398151915260448201526e1b9d985b1a59081cd99d081cdb1bdd608a1b6064820152608401610201565b60008290036104005760405162461bcd60e51b815260206004820152602e6024820152600080516020610c2d83398151915260448201526d1b9d985b1a59081c1bdbdb081a5960921b6064820152608401610201565b6001600160a01b0381166104665760405162461bcd60e51b81526020600482015260396024820152600080516020610c2d8339815191526044820152786e76616c696420736674206f7261636c65206164647265737360381b6064820152608401610201565b604080516080810182528381526001600160a01b03868116602080840182815284860189815287851660608088018281528e88166000818152603288528b902099518a55945160018a018054918a166001600160a01b0319928316179055935160028a015551600390980180549890971697909216969096179094558551928352908201889052938101929092528492917fd0d7fbfc5efc2f7cc91fc8be99ab593c00a3176a968efad158354ca27574de7e910160405180910390a35050505050565b6000546001600160a01b031633146105535760405162461bcd60e51b815260040161020190610ab0565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a991610592916001600160a01b03909116908490610a96565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006105c6610939565b805490915060ff600160401b82041615906001600160401b03166000811580156105ed5750825b90506000826001600160401b031660011480156106095750303b155b905081158015610617575080155b156106355760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b0319166001178555831561065e57845460ff60401b1916600160401b1785555b6106673361095d565b83156106ad57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b6001600160a01b03808216600090815260326020526040812060038101549192909116158015906106e55750805415155b61074c5760405162461bcd60e51b815260206004820152603260248201527f536f6c764254435969656c64546f6b656e4f7261636c65466f725346543a206e60448201527106f206f7261636c6520666f722065726332360741b6064820152608401610201565b600381015481546040516395b4c46760e01b815260048101919091524260248201526000916001600160a01b0316906395b4c467906044016040805180830381865afa1580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190610ad4565b50949350505050565b6001600160a01b038082166000908152603260209081526040808320600181015482516308ba344760e41b815292519495919486949190921692638ba3447092600480830193928290030181865afa15801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190610b08565b90506000816001600160a01b03166394f7e23e84600201546040518263ffffffff1660e01b815260040161088791815260200190565b60e060405180830381865afa1580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190610b4c565b905080602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190610c09565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b610965610971565b61096e81610998565b50565b6109796109e4565b61099657604051631afcd79f60e31b815260040160405180910390fd5b565b6109a0610971565b600080546001600160a01b0319166001600160a01b038316178155604051600080516020610c4d833981519152916109d9918490610a96565b60405180910390a150565b60006109ee610939565b54600160401b900460ff16919050565b6001600160a01b038116811461096e57600080fd5b600060208284031215610a2557600080fd5b8135610a30816109fe565b9392505050565b600080600080600060a08688031215610a4f57600080fd5b8535610a5a816109fe565b94506020860135610a6a816109fe565b935060408601359250606086013591506080860135610a88816109fe565b809150509295509295909350565b6001600160a01b0392831681529116602082015260400190565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b60008060408385031215610ae757600080fd5b505080516020909101519092909150565b8051610b03816109fe565b919050565b600060208284031215610b1a57600080fd5b8151610a30816109fe565b80516001600160401b0381168114610b0357600080fd5b80518015158114610b0357600080fd5b600060e08284031215610b5e57600080fd5b60405160e081016001600160401b0381118282101715610b8e57634e487b7160e01b600052604160045260246000fd5b604052610b9a83610af8565b8152610ba860208401610af8565b6020820152610bb960408401610b25565b6040820152610bca60608401610b25565b6060820152610bdb60808401610b25565b6080820152610bec60a08401610b3c565b60a0820152610bfd60c08401610b3c565b60c08201529392505050565b600060208284031215610c1b57600080fd5b815160ff81168114610a3057600080fdfe536f6c764254435969656c64546f6b656e4f7261636c65466f725346543a2069f9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dca26469706673582212204e4b34403fc3d5b879e2239917017397b262056ee04a8a9b06f5c9916f1f731064736f6c63430008140033",
  "devdoc": {
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9528,
        "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9530,
        "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9625,
        "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
        "label": "__gap",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 10237,
        "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
        "label": "sftOracles",
        "offset": 0,
        "slot": "50",
        "type": "t_mapping(t_address,t_struct(SFTOracleConfig)10220_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(SFTOracleConfig)10220_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SolvBTCYieldTokenOracleForSFT.SFTOracleConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(SFTOracleConfig)10220_storage"
      },
      "t_struct(SFTOracleConfig)10220_storage": {
        "encoding": "inplace",
        "label": "struct SolvBTCYieldTokenOracleForSFT.SFTOracleConfig",
        "members": [
          {
            "astId": 10213,
            "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
            "label": "poolId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 10215,
            "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
            "label": "sft",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 10217,
            "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
            "label": "sftSlot",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10219,
            "contract": "contracts/oracle/SolvBTCYieldTokenOracleForSFT.sol:SolvBTCYieldTokenOracleForSFT",
            "label": "oracle",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}