{
  "address": "0xcf871588203aF2A70E8513db43D785023f5E8aA1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "navTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nav",
          "type": "uint256"
        }
      ],
      "name": "SetNav",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20_",
          "type": "address"
        }
      ],
      "name": "getNav",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "navDecimals_",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20_",
          "type": "address"
        }
      ],
      "name": "navDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nav_",
          "type": "uint256"
        }
      ],
      "name": "setNav",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "xSolvBTC_",
          "type": "address"
        }
      ],
      "name": "setXSolvBTC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin_",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xSolvBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x37d31b7c127b189cfe0aeeba609e8a0441ea8b42ec8b1589f620e0d8c1fb61e6",
  "receipt": {
    "to": null,
    "from": "0x55C09707Fd7aFD670e82A62FaeE312903940013E",
    "contractAddress": "0xcf871588203aF2A70E8513db43D785023f5E8aA1",
    "transactionIndex": 1,
    "gasUsed": "509608",
    "logsBloom": "0x
    "blockHash": "0xe240164af02e8cdaf260f67fd9b3a3c74a167afe1d064b63adaf8515d2d557db",
    "transactionHash": "0x37d31b7c127b189cfe0aeeba609e8a0441ea8b42ec8b1589f620e0d8c1fb61e6",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 18170515,
        "transactionHash": "0x37d31b7c127b189cfe0aeeba609e8a0441ea8b42ec8b1589f620e0d8c1fb61e6",
        "address": "0xcf871588203aF2A70E8513db43D785023f5E8aA1",
        "topics": [
          "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
        ],
        "data": "0x000000000000000000000000000000000000000000000000ffffffffffffffff",
        "logIndex": 0,
        "blockHash": "0xe240164af02e8cdaf260f67fd9b3a3c74a167afe1d064b63adaf8515d2d557db"
      }
    ],
    "blockNumber": 18170515,
    "cumulativeGasUsed": "555776",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bf2b2082482b09e4bad09dc12c930444",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"navTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nav\",\"type\":\"uint256\"}],\"name\":\"SetNav\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20_\",\"type\":\"address\"}],\"name\":\"getNav\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"navDecimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20_\",\"type\":\"address\"}],\"name\":\"navDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nav_\",\"type\":\"uint256\"}],\"name\":\"setNav\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"xSolvBTC_\",\"type\":\"address\"}],\"name\":\"setXSolvBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin_\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xSolvBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is a oracle that allows users to get the nav of xSolvBTC.The nav is the price of xSolvBTC in solvBTC.The nav is updated by the admin at a fixed period of time, such as a week.Only the nav is allowed per day.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"getNav(address)\":{\"params\":{\"erc20_\":\"The address of the erc20 token\"},\"returns\":{\"_0\":\"nav The nav of xSolvBTC\"}},\"initialize(uint8)\":{\"params\":{\"navDecimals_\":\"The decimals of the nav\"}},\"latestUpdatedAt()\":{\"returns\":{\"_0\":\"latestUpdatedAt The latest updated at\"}},\"navDecimals(address)\":{\"params\":{\"erc20_\":\"The address of the erc20 token\"},\"returns\":{\"_0\":\"decimals The decimals of the nav\"}},\"setNav(uint256)\":{\"params\":{\"nav_\":\"The nav of xSolvBTC\"}},\"setXSolvBTC(address)\":{\"params\":{\"xSolvBTC_\":\"The address of the xSolvBTC\"}}},\"title\":\"XSolvBTCOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNav(address)\":{\"notice\":\"Get the nav of xSolvBTC\"},\"initialize(uint8)\":{\"notice\":\"Initialize the oracle\"},\"latestUpdatedAt()\":{\"notice\":\"Get the latest updated at\"},\"navDecimals(address)\":{\"notice\":\"Get the decimals of the nav\"},\"setNav(uint256)\":{\"notice\":\"Set the nav of xSolvBTC\"},\"setXSolvBTC(address)\":{\"notice\":\"Set the xSolvBTC address\"}},\"notice\":\"The oracle for xSolvBTC, which is a yield token of solvBTC.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/XSolvBTCOracle.sol\":\"XSolvBTCOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"contracts/ISolvBTCYieldTokenOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\ninterface ISolvBTCYieldTokenOracle {\\n    function getNav(address erc20) external view returns (uint256);\\n    function navDecimals(address erc20) external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xa439635d003b7fb2e0ea5c190e576b5687f0c8d01a206c5f7288dae5866b4a92\",\"license\":\"MIT\"},\"contracts/access/AdminControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nabstract contract AdminControlUpgradeable is Initializable {\\n\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    address public admin;\\n    address public pendingAdmin;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"only admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyPendingAdmin() {\\n        require(msg.sender == pendingAdmin, \\\"only pending admin\\\");\\n        _;\\n    }\\n\\n    function __AdminControl_init(address admin_) internal onlyInitializing {\\n        __AdminControl_init_unchained(admin_);\\n    }\\n\\n    function __AdminControl_init_unchained(address admin_) internal onlyInitializing {\\n        admin = admin_;\\n        emit NewAdmin(address(0), admin_);\\n    }\\n\\n    function transferAdmin(address newPendingAdmin_) external virtual onlyAdmin {\\n        emit NewPendingAdmin(pendingAdmin, newPendingAdmin_);\\n        pendingAdmin = newPendingAdmin_;        \\n    }\\n\\n    function acceptAdmin() external virtual onlyPendingAdmin {\\n        emit NewAdmin(admin, pendingAdmin);\\n        admin = pendingAdmin;\\n        delete pendingAdmin;\\n    }\\n\\n    uint256[48] private __gap;\\n}\\n\",\"keccak256\":\"0xf7bde55289afe561d40407007b005a6cdc97d7cc3ec98e58866faeb80f63f883\",\"license\":\"MIT\"},\"contracts/oracle/XSolvBTCOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.20;\\n\\nimport \\\"../ISolvBTCYieldTokenOracle.sol\\\";\\nimport \\\"../access/AdminControlUpgradeable.sol\\\";\\n\\n/**\\n * @title XSolvBTCOracle\\n * @notice The oracle for xSolvBTC, which is a yield token of solvBTC.\\n * @dev This contract is a oracle that allows users to get the nav of xSolvBTC.\\n * @dev The nav is the price of xSolvBTC in solvBTC.\\n * @dev The nav is updated by the admin at a fixed period of time, such as a week.\\n * @dev Only the nav is allowed per day.\\n */\\ncontract XSolvBTCOracle is ISolvBTCYieldTokenOracle, AdminControlUpgradeable {\\n    uint8 private _navDecimals;\\n    address public xSolvBTC;\\n    uint256 private _latestUpdatedAt;\\n    uint256 private _latestNav;\\n\\n    event SetNav(uint256 navTime, uint256 nav);\\n\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * @notice Initialize the oracle\\n     * @param navDecimals_ The decimals of the nav\\n     */\\n    function initialize(uint8 navDecimals_) external initializer {\\n        __AdminControl_init(msg.sender);\\n        _navDecimals = navDecimals_;\\n    }\\n\\n    /**\\n     * @notice Get the nav of xSolvBTC\\n     * @param erc20_ The address of the erc20 token\\n     * @return nav The nav of xSolvBTC\\n     */\\n    function getNav(address erc20_) external view override returns (uint256) {\\n        require(erc20_ == xSolvBTC, \\\"XSolvBTCOracle: invalid erc20 address\\\");\\n        require(_latestNav != 0, \\\"XSolvBTCOracle: nav not set\\\");\\n        return _latestNav;\\n    }\\n\\n    /**\\n     * @notice Get the decimals of the nav\\n     * @param erc20_ The address of the erc20 token\\n     * @return decimals The decimals of the nav\\n     */\\n    function navDecimals(address erc20_) external view override returns (uint8) {\\n        require(erc20_ == xSolvBTC, \\\"XSolvBTCOracle: invalid erc20 address\\\");\\n        return _navDecimals;\\n    }\\n\\n    /**\\n     * @notice Get the latest updated at\\n     * @return latestUpdatedAt The latest updated at\\n     */\\n    function latestUpdatedAt() external view returns (uint256) {\\n        return _latestUpdatedAt;\\n    }\\n\\n    /**\\n     * @notice Set the nav of xSolvBTC\\n     * @param nav_ The nav of xSolvBTC\\n     */\\n    function setNav(uint256 nav_) external onlyAdmin {\\n        require(nav_ != 0, \\\"XSolvBTCOracle: invalid nav\\\");\\n        _latestNav = nav_;\\n        _latestUpdatedAt = block.timestamp;\\n        emit SetNav(_latestUpdatedAt, nav_);\\n    }\\n\\n    /**\\n     * @notice Set the xSolvBTC address\\n     * @param xSolvBTC_ The address of the xSolvBTC\\n     */\\n    function setXSolvBTC(address xSolvBTC_) external onlyAdmin {\\n        xSolvBTC = xSolvBTC_;\\n    }\\n\\n    /**\\n     * @notice Get the date of the timestamp\\n     * @param timestamp_ The timestamp\\n     * @return date The date\\n     */\\n    function _getDate(uint256 timestamp_) internal pure returns (uint256) {\\n        return timestamp_ / 86400 * 86400;\\n    }\\n}\\n\",\"keccak256\":\"0x6decc435fbc81915c4e5aa37daca5ec1b7d5407c2f6d8c576b5bd1f1e55e1fa4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6107c6806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80630e18b6811461009e578063251d8ffb146100a857806326782247146100bb5780634351e6b6146100eb5780634d219e8f146100fe57806375829def14610116578063918e220d14610129578063a13c96201461013b578063f851a4401461014e578063fb59600814610161578063ff554afa14610174575b600080fd5b6100a6610199565b005b6100a66100b6366004610681565b61024d565b6001546100ce906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a66100f936600461069a565b61030d565b6032546100ce9061010090046001600160a01b031681565b6100a66101243660046106c4565b610415565b6033545b6040519081526020016100e2565b6100a66101493660046106c4565b6104a8565b6000546100ce906001600160a01b031681565b61012d61016f3660046106c4565b6104fa565b6101876101823660046106c4565b610587565b60405160ff90911681526020016100e2565b6001546001600160a01b031633146101ed5760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b60448201526064015b60405180910390fd5b6000546001546040516000805160206107718339815191529261021e926001600160a01b03918216929116906106ed565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146102775760405162461bcd60e51b81526004016101e490610707565b806000036102c55760405162461bcd60e51b815260206004820152601b60248201527a2c29b7b63b212a21a7b930b1b6329d1034b73b30b634b2103730bb60291b60448201526064016101e4565b603481905542603381905560408051918252602082018390527fcce0116f7b54810b707a83210a60bff6cbd2dacc646926e66f1be9c7bc55d07c91015b60405180910390a150565b60006103176105c7565b805490915060ff600160401b82041615906001600160401b031660008115801561033e5750825b90506000826001600160401b0316600114801561035a5750303b155b905081158015610368575080155b156103865760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b031916600117855583156103af57845460ff60401b1916600160401b1785555b6103b8336105eb565b6032805460ff191660ff8816179055831561040d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6000546001600160a01b0316331461043f5760405162461bcd60e51b81526004016101e490610707565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99161047e916001600160a01b039091169084906106ed565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104d25760405162461bcd60e51b81526004016101e490610707565b603280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6032546000906001600160a01b03838116610100909204161461052f5760405162461bcd60e51b81526004016101e49061072b565b60345460000361057f5760405162461bcd60e51b815260206004820152601b60248201527a1614dbdb1d909510d3dc9858db194e881b985d881b9bdd081cd95d602a1b60448201526064016101e4565b505060345490565b6032546000906001600160a01b0383811661010090920416146105bc5760405162461bcd60e51b81526004016101e49061072b565b505060325460ff1690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b6105f36105ff565b6105fc81610626565b50565b610607610667565b61062457604051631afcd79f60e31b815260040160405180910390fd5b565b61062e6105ff565b600080546001600160a01b0319166001600160a01b038316178155604051600080516020610771833981519152916103029184906106ed565b60006106716105c7565b54600160401b900460ff16919050565b60006020828403121561069357600080fd5b5035919050565b6000602082840312156106ac57600080fd5b813560ff811681146106bd57600080fd5b9392505050565b6000602082840312156106d657600080fd5b81356001600160a01b03811681146106bd57600080fd5b6001600160a01b0392831681529116602082015260400190565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b60208082526025908201527f58536f6c764254434f7261636c653a20696e76616c6964206572633230206164604082015264647265737360d81b60608201526080019056fef9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dca2646970667358221220ea3d2c493deeb5b61e62bc0ff16b9b1ae1ae1686d093836b3fb6949d0325a83064736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c80630e18b6811461009e578063251d8ffb146100a857806326782247146100bb5780634351e6b6146100eb5780634d219e8f146100fe57806375829def14610116578063918e220d14610129578063a13c96201461013b578063f851a4401461014e578063fb59600814610161578063ff554afa14610174575b600080fd5b6100a6610199565b005b6100a66100b6366004610681565b61024d565b6001546100ce906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a66100f936600461069a565b61030d565b6032546100ce9061010090046001600160a01b031681565b6100a66101243660046106c4565b610415565b6033545b6040519081526020016100e2565b6100a66101493660046106c4565b6104a8565b6000546100ce906001600160a01b031681565b61012d61016f3660046106c4565b6104fa565b6101876101823660046106c4565b610587565b60405160ff90911681526020016100e2565b6001546001600160a01b031633146101ed5760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b60448201526064015b60405180910390fd5b6000546001546040516000805160206107718339815191529261021e926001600160a01b03918216929116906106ed565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146102775760405162461bcd60e51b81526004016101e490610707565b806000036102c55760405162461bcd60e51b815260206004820152601b60248201527a2c29b7b63b212a21a7b930b1b6329d1034b73b30b634b2103730bb60291b60448201526064016101e4565b603481905542603381905560408051918252602082018390527fcce0116f7b54810b707a83210a60bff6cbd2dacc646926e66f1be9c7bc55d07c91015b60405180910390a150565b60006103176105c7565b805490915060ff600160401b82041615906001600160401b031660008115801561033e5750825b90506000826001600160401b0316600114801561035a5750303b155b905081158015610368575080155b156103865760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b031916600117855583156103af57845460ff60401b1916600160401b1785555b6103b8336105eb565b6032805460ff191660ff8816179055831561040d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6000546001600160a01b0316331461043f5760405162461bcd60e51b81526004016101e490610707565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99161047e916001600160a01b039091169084906106ed565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104d25760405162461bcd60e51b81526004016101e490610707565b603280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6032546000906001600160a01b03838116610100909204161461052f5760405162461bcd60e51b81526004016101e49061072b565b60345460000361057f5760405162461bcd60e51b815260206004820152601b60248201527a1614dbdb1d909510d3dc9858db194e881b985d881b9bdd081cd95d602a1b60448201526064016101e4565b505060345490565b6032546000906001600160a01b0383811661010090920416146105bc5760405162461bcd60e51b81526004016101e49061072b565b505060325460ff1690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b6105f36105ff565b6105fc81610626565b50565b610607610667565b61062457604051631afcd79f60e31b815260040160405180910390fd5b565b61062e6105ff565b600080546001600160a01b0319166001600160a01b038316178155604051600080516020610771833981519152916103029184906106ed565b60006106716105c7565b54600160401b900460ff16919050565b60006020828403121561069357600080fd5b5035919050565b6000602082840312156106ac57600080fd5b813560ff811681146106bd57600080fd5b9392505050565b6000602082840312156106d657600080fd5b81356001600160a01b03811681146106bd57600080fd5b6001600160a01b0392831681529116602082015260400190565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b60208082526025908201527f58536f6c764254434f7261636c653a20696e76616c6964206572633230206164604082015264647265737360d81b60608201526080019056fef9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dca2646970667358221220ea3d2c493deeb5b61e62bc0ff16b9b1ae1ae1686d093836b3fb6949d0325a83064736f6c63430008140033",
  "devdoc": {
    "details": "This contract is a oracle that allows users to get the nav of xSolvBTC.The nav is the price of xSolvBTC in solvBTC.The nav is updated by the admin at a fixed period of time, such as a week.Only the nav is allowed per day.",
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "getNav(address)": {
        "params": {
          "erc20_": "The address of the erc20 token"
        },
        "returns": {
          "_0": "nav The nav of xSolvBTC"
        }
      },
      "initialize(uint8)": {
        "params": {
          "navDecimals_": "The decimals of the nav"
        }
      },
      "latestUpdatedAt()": {
        "returns": {
          "_0": "latestUpdatedAt The latest updated at"
        }
      },
      "navDecimals(address)": {
        "params": {
          "erc20_": "The address of the erc20 token"
        },
        "returns": {
          "_0": "decimals The decimals of the nav"
        }
      },
      "setNav(uint256)": {
        "params": {
          "nav_": "The nav of xSolvBTC"
        }
      },
      "setXSolvBTC(address)": {
        "params": {
          "xSolvBTC_": "The address of the xSolvBTC"
        }
      }
    },
    "title": "XSolvBTCOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getNav(address)": {
        "notice": "Get the nav of xSolvBTC"
      },
      "initialize(uint8)": {
        "notice": "Initialize the oracle"
      },
      "latestUpdatedAt()": {
        "notice": "Get the latest updated at"
      },
      "navDecimals(address)": {
        "notice": "Get the decimals of the nav"
      },
      "setNav(uint256)": {
        "notice": "Set the nav of xSolvBTC"
      },
      "setXSolvBTC(address)": {
        "notice": "Set the xSolvBTC address"
      }
    },
    "notice": "The oracle for xSolvBTC, which is a yield token of solvBTC.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14332,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14334,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14429,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "__gap",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 15561,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "_navDecimals",
        "offset": 0,
        "slot": "50",
        "type": "t_uint8"
      },
      {
        "astId": 15563,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "xSolvBTC",
        "offset": 1,
        "slot": "50",
        "type": "t_address"
      },
      {
        "astId": 15565,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "_latestUpdatedAt",
        "offset": 0,
        "slot": "51",
        "type": "t_uint256"
      },
      {
        "astId": 15567,
        "contract": "contracts/oracle/XSolvBTCOracle.sol:XSolvBTCOracle",
        "label": "_latestNav",
        "offset": 0,
        "slot": "52",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}